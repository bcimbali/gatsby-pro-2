{"version":3,"sources":["webpack:///./src/components/postLayout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/A_Way_of_Speaking_Cover.jpg","webpack:///./src/components/archive.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["postlayout","render","markdownRemark","this","props","data","location","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_2__","frontmatter","title","dangerouslySetInnerHTML","__html","html","Component","query","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","ArchiveList","styled","ul","withConfig","displayName","componentId","Archive","react_default","gatsby_browser_entry","allMarkdownRemark","Fragment","edges","map","edge","key","node","slug","to","_1194998240","HeaderWrapper","div","HeaderContainer","Header","siteTitle","style","margin","color","textDecoration","width","src","logo","alt","defaultProps","MainLayout","main","Layout","Helmet_default","site","siteMetadata","meta","name","content","description","lang","header","web","from","height","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_2885641949"],"mappings":"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","file":"component---src-components-post-layout-js-259dce8cf916a07e8aa8.js","sourcesContent":["import React, { Component } from 'react';\n\nimport Layout from './layout'\nimport { graphql } from 'gatsby';\n\nexport default class postlayout extends Component {\n  render() {\n    const { markdownRemark } = this.props.data;\n    const { location } = this.props;\n    return (\n      <Layout location={location}>\n        <h1>{markdownRemark.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{\n          __html: markdownRemark.html\n        }}/>\n      </Layout>\n    )\n  }\n}\n\nexport const query = graphql`\n  query PostQuery($slug: String!) {\n    markdownRemark(frontmatter: {\n      slug:{\n        eq: $slug\n      }\n    }) {\n      html\n      frontmatter {\n        title\n        date\n        slug\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/A_Way_of_Speaking_Cover-ddfc2c1e649dc4e3dd6cda551c5e871d.jpg\";","import { Link, StaticQuery, graphql } from 'gatsby'\n\nimport React from 'react'\nimport styled from 'styled-components';\n\nconst POST_ARCHIVE_QUERY = graphql`\n  query blogPostArchive {\n    allMarkdownRemark(limit: 5, sort: {\n      order: DESC,\n      fields: [frontmatter___date]\n    }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchiveList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n                  Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, \n                  Helvetica Neue, sans-serif;\n    font-size: 0.8rem;\n    text-decoration: underline;\n    color: #524763;\n  }\n`;\n\nconst Archive = () => (\n  <StaticQuery\n    query={POST_ARCHIVE_QUERY}\n    render={({allMarkdownRemark}) => (\n      <>\n        <aside>\n          <h3>Archive</h3>\n          <ArchiveList>\n          {allMarkdownRemark.edges.map(edge => (\n            <li key={edge.node.frontmatter.slug}>\n              <Link to={`/posts${edge.node.frontmatter.slug}`}>\n                {edge.node.frontmatter.title}\n              </Link>\n            </li>\n          ))}\n          </ArchiveList>\n        </aside>\n      </>\n    )}\n  />\n)\n\nexport default Archive\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport logo from '../images/A_Way_of_Speaking_Cover.jpg';\nimport styled from 'styled-components';\n\n// Just write plain ol' CSS here:\nconst HeaderWrapper = styled.div`\n  background: #524763;\n  img {\n    margin-bottom: 0;\n  }\n`;\n\nconst HeaderContainer= styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 0.3rem;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          <img style={{\n            width: '100px'\n          }} src={logo} alt=\"SO Logo\"/>\n        </Link>\n      </h1>\n    </HeaderContainer>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import './layout.css'\n\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Archive from './archive'\nimport Header from './header'\nimport Helmet from \"react-helmet\";\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types'\nimport React from 'react';\nimport { Spring } from 'react-spring';\nimport styled from 'styled-components';\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 1rem auto;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 40px;\n`;\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        file(relativePath: {\n          regex: \"/bg/\"\n        }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet \n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'sample, something'},\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n          <Spring\n            from={{ height: location.pathname === '/' ? 100 : 200 }}\n            to={{ height: location.pathname === '/' ? 200 : 100  }}\n          >\n            {styles => (\n              <div style={{overflow: 'hidden', ...styles}}>\n                <Img fluid={data.file.childImageSharp.fluid} />\n              </div>\n            )}\n\n          </Spring>\n\n        {/* {location.pathname === '/' &&\n          \n        } */}\n        <MainLayout>\n          <div>\n            {children}\n          </div>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n"],"sourceRoot":""}