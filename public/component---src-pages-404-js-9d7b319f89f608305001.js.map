{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/A_Way_of_Speaking_Cover.jpg","webpack:///./src/components/archive.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","ArchiveList","styled","ul","withConfig","displayName","componentId","Archive","react_default","gatsby_browser_entry","allMarkdownRemark","Fragment","edges","map","edge","key","node","frontmatter","slug","to","_1194998240","HeaderWrapper","div","HeaderContainer","Header","siteTitle","style","margin","color","textDecoration","width","src","logo","alt","defaultProps","MainLayout","main","Layout","Helmet_default","site","siteMetadata","meta","name","content","description","lang","header","web","from","height","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_2885641949","SEO","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-404-js-9d7b319f89f608305001.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/A_Way_of_Speaking_Cover-ddfc2c1e649dc4e3dd6cda551c5e871d.jpg\";","import { Link, StaticQuery, graphql } from 'gatsby'\n\nimport React from 'react'\nimport styled from 'styled-components';\n\nconst POST_ARCHIVE_QUERY = graphql`\n  query blogPostArchive {\n    allMarkdownRemark(limit: 5, sort: {\n      order: DESC,\n      fields: [frontmatter___date]\n    }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchiveList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n                  Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, \n                  Helvetica Neue, sans-serif;\n    font-size: 0.8rem;\n    text-decoration: underline;\n    color: #524763;\n  }\n`;\n\nconst Archive = () => (\n  <StaticQuery\n    query={POST_ARCHIVE_QUERY}\n    render={({allMarkdownRemark}) => (\n      <>\n        <aside>\n          <h3>Archive</h3>\n          <ArchiveList>\n          {allMarkdownRemark.edges.map(edge => (\n            <li key={edge.node.frontmatter.slug}>\n              <Link to={`/posts${edge.node.frontmatter.slug}`}>\n                {edge.node.frontmatter.title}\n              </Link>\n            </li>\n          ))}\n          </ArchiveList>\n        </aside>\n      </>\n    )}\n  />\n)\n\nexport default Archive\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport logo from '../images/A_Way_of_Speaking_Cover.jpg';\nimport styled from 'styled-components';\n\n// Just write plain ol' CSS here:\nconst HeaderWrapper = styled.div`\n  background: #524763;\n  img {\n    margin-bottom: 0;\n  }\n`;\n\nconst HeaderContainer= styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 0.3rem;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          <img style={{\n            width: '100px'\n          }} src={logo} alt=\"SO Logo\"/>\n        </Link>\n      </h1>\n    </HeaderContainer>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import './layout.css'\n\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Archive from './archive'\nimport Header from './header'\nimport Helmet from \"react-helmet\";\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types'\nimport React from 'react';\nimport { Spring } from 'react-spring';\nimport styled from 'styled-components';\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 1rem auto;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 40px;\n`;\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        file(relativePath: {\n          regex: \"/bg/\"\n        }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet \n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'sample, something'},\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n          <Spring\n            from={{ height: location.pathname === '/' ? 100 : 200 }}\n            to={{ height: location.pathname === '/' ? 200 : 100  }}\n          >\n            {styles => (\n              <div style={{overflow: 'hidden', ...styles}}>\n                <Img fluid={data.file.childImageSharp.fluid} />\n              </div>\n            )}\n\n          </Spring>\n\n        {/* {location.pathname === '/' &&\n          \n        } */}\n        <MainLayout>\n          <div>\n            {children}\n          </div>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}