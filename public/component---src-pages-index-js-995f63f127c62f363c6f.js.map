{"version":3,"sources":["webpack:///./src/components/listing.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/A_Way_of_Speaking_Cover.jpg","webpack:///./src/components/archive.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Post","styled","article","withConfig","displayName","componentId","Listing","react_default","a","createElement","gatsby_browser_entry","query","render","_ref","allMarkdownRemark","edges","map","_ref2","node","key","frontmatter","slug","to","title","date","excerpt","class","data","_2206128657","IndexPage","location","layout","listing","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","ArchiveList","ul","Archive","Fragment","edge","_1194998240","HeaderWrapper","div","HeaderContainer","Header","siteTitle","style","margin","color","textDecoration","width","src","logo","alt","defaultProps","MainLayout","main","Layout","Helmet_default","site","siteMetadata","meta","name","content","description","lang","header","web","from","height","styles","overflow","gatsby_image_default","fluid","file","childImageSharp","archive","_2885641949"],"mappings":"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","file":"component---src-pages-index-js-995f63f127c62f363c6f.js","sourcesContent":["import { Link, StaticQuery, graphql } from 'gatsby'\n\nimport React from 'react'\nimport styled from 'styled-components';\n\nconst Post = styled.article`\n  box-shadow: 0 3px 10px rgba(25, 17, 34, 0.05);\n  padding: 1rem;\n  border-radius: 4px;\n  margin-bottom: 1rem;\n  a {\n    color: #000;\n    text-decoration: none;\n  }\n  h2 {\n    margin-bottom: 0;\n  }\n  p {\n    font-size: 0.8rem;\n  }\n  .read-more {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n                  Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, \n                  Helvetica Neue, sans-serif;\n    font-size: 0.8rem;\n    text-decoration: underline;\n    color: #524763;\n  }\n`;\n\nconst LISTING_QUERY = graphql`\n  query BlogPostListing  {\n    allMarkdownRemark(limit: 10, sort: {\n      order: DESC,\n      fields: [frontmatter___date]\n    }) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date(formatString: \"MMMM, DD, YYYY\")\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Listing = () => (\n  <div>\n    <StaticQuery \n      query={LISTING_QUERY}\n      render={({allMarkdownRemark}) => (\n        allMarkdownRemark.edges.map(({node}) => (\n          <Post key={node.frontmatter.slug}>\n            <Link to={`/posts${node.frontmatter.slug}`}>\n              <h2>{node.frontmatter.title}</h2>\n            </Link>\n            <p>{node.frontmatter.date}</p>\n            <p>{node.excerpt}</p>\n            <Link class=\"read-more\" to={`/posts${node.frontmatter.slug}`}>Read More</Link>\n          </Post>\n        ))\n      )}\n    />\n  </div>\n)\n\nexport default Listing","import Layout from '../components/layout'\nimport Listing from '../components/listing';\nimport React from 'react'\n\nconst IndexPage = ({location}) => (\n  <Layout location={location}>\n    <Listing />\n  </Layout>\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/A_Way_of_Speaking_Cover-ddfc2c1e649dc4e3dd6cda551c5e871d.jpg\";","import { Link, StaticQuery, graphql } from 'gatsby'\n\nimport React from 'react'\nimport styled from 'styled-components';\n\nconst POST_ARCHIVE_QUERY = graphql`\n  query blogPostArchive {\n    allMarkdownRemark(limit: 5, sort: {\n      order: DESC,\n      fields: [frontmatter___date]\n    }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst ArchiveList = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  a {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto,\n                  Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, \n                  Helvetica Neue, sans-serif;\n    font-size: 0.8rem;\n    text-decoration: underline;\n    color: #524763;\n  }\n`;\n\nconst Archive = () => (\n  <StaticQuery\n    query={POST_ARCHIVE_QUERY}\n    render={({allMarkdownRemark}) => (\n      <>\n        <aside>\n          <h3>Archive</h3>\n          <ArchiveList>\n          {allMarkdownRemark.edges.map(edge => (\n            <li key={edge.node.frontmatter.slug}>\n              <Link to={`/posts${edge.node.frontmatter.slug}`}>\n                {edge.node.frontmatter.title}\n              </Link>\n            </li>\n          ))}\n          </ArchiveList>\n        </aside>\n      </>\n    )}\n  />\n)\n\nexport default Archive\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport logo from '../images/A_Way_of_Speaking_Cover.jpg';\nimport styled from 'styled-components';\n\n// Just write plain ol' CSS here:\nconst HeaderWrapper = styled.div`\n  background: #524763;\n  img {\n    margin-bottom: 0;\n  }\n`;\n\nconst HeaderContainer= styled.div`\n  margin: 0 auto;\n  max-width: 960;\n  padding: 0.3rem;\n`;\n\nconst Header = ({ siteTitle }) => (\n  <HeaderWrapper>\n    <HeaderContainer>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          <img style={{\n            width: '100px'\n          }} src={logo} alt=\"SO Logo\"/>\n        </Link>\n      </h1>\n    </HeaderContainer>\n  </HeaderWrapper>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import './layout.css'\n\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Archive from './archive'\nimport Header from './header'\nimport Helmet from \"react-helmet\";\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types'\nimport React from 'react';\nimport { Spring } from 'react-spring';\nimport styled from 'styled-components';\n\nconst MainLayout = styled.main`\n  max-width: 90%;\n  margin: 1rem auto;\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 40px;\n`;\n\nconst Layout = ({ children, location }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n        file(relativePath: {\n          regex: \"/bg/\"\n        }) {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet \n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'keywords', content: 'sample, something'},\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n          <Spring\n            from={{ height: location.pathname === '/' ? 100 : 200 }}\n            to={{ height: location.pathname === '/' ? 200 : 100  }}\n          >\n            {styles => (\n              <div style={{overflow: 'hidden', ...styles}}>\n                <Img fluid={data.file.childImageSharp.fluid} />\n              </div>\n            )}\n\n          </Spring>\n\n        {/* {location.pathname === '/' &&\n          \n        } */}\n        <MainLayout>\n          <div>\n            {children}\n          </div>\n          <Archive />\n        </MainLayout>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nLayout.defaultProps = {\n  location: {},\n}\n\nexport default Layout\n"],"sourceRoot":""}